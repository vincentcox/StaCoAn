matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      language: python
      python: 3.6.2
    - os: osx
      sudo: required
      python: 3.6.2
    - os: windows
      language: python
      env:
        - DOCKER=true
      services:
        - docker
addons:
  chrome: stable
before_script:
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then export DISPLAY=:99.0 ; fi
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then sh -e /etc/init.d/xvfb start ; fi
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then sleep 3  ; fi
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python3 ; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then docker pull cdrx/pyinstaller-windows; fi
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then docker run -v "$(pwd)/src:/src/" cdrx/pyinstaller-windows; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then python3 -V; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then pip3 -V; fi
# command to install dependencies
install:
  - cd src
# command to run tests
script:
 # Run script
  - sudo chmod +x jadx/bin/jadx
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then pip3 install -r requirements.txt; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then python3 stacoan.py -p test-apk.apk; fi # or py.test for Python versions 3.5 and below
 # Building the executable for the deployment
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then pip3 install pyinstaller; fi
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then python3 -m PyInstaller stacoan.py --onefile --paths=helpers --icon icon.ico --name stacoan --clean --noupx; fi
  
  # Making directories and add files
  - mkdir deploy
  - mkdir deploy/report
  - cp report/start.html ./deploy/report
  - cp -R report/html ./deploy/report
  - cp -R jadx ./deploy/
  - cp -R config ./deploy/
  - cp ../README.md ./deploy/README.md
  - cp config.ini ./deploy/config.ini
  
  # Create zip
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]];
    then cp dist/windows/* ./deploy/;
    else cp dist/* ./deploy/;
    fi
  - name_zip=$TRAVIS_OS_NAME+".zip"
  - zip -r $(echo $name_zip) deploy
  
  
deploy:
  provider: releases
  skip_cleanup: true
  prerelease: true
  on:
    all_branches: true
    tags: true
  api_key:
    secure: LHo4mTW5GAq2YqArglFcB4T4Gmq8Z3aZIZiAGtvtdUhHhtKBJR1LDRITDsedeNXHf/wye9IxBwbiA6E1GDeZzsk20i6+5UMxsMasMYlq4OFVrbJrdm6adrjagSgZp7JePbk2EXzFFYDL4lvXT3lhSXW7exKBhzQRcr3y4Tuc2DczJ7G5y+ZQnrUYOLX3ln5Pq2DViUcPmH+ycFAq89X5zrXKyIoZTNAA3ffqVac0gMX24sLodTU/bMnp22fde6v7W//yx4nkoaaVqRk3doE8wxm1oaBaAT+Oy9N4P5AZ/5HA3mb96o0+Rfo3FIZGJ9kvv1Mk1eVb8ii1Kd0hA6EzU+ay9w84p77oSPUCAWUcJgNYgcsurRnW9f4GjRWt2KQ8NWP9sHOTsabtkLVhJ6/RBdSM5cvZkxMUgP8ebOtIyaWouO3qBYcZ43Jio44IhF/a6pRIlhLsRuozaBvOWfN/207d2I2p+EMcwpK9I14A1wbc+7Naph6a7gACohmt9+6r8GTMzLPwhev1T7JJn3DbPLsQBX4yWaMMbdITDgbZUxTluwYviCehrb7WhtfMiNWeSluCvn2p9rwyxxUq2fgxd3gteeEVYdTjLa3rTunRS8F8X/YDhgRmd9TEoB0OAkW+vqOAFaPED6tvhVlLHxIotHQ4rQt2LtBD/TaGnbnJiJ4=
  file: $(echo $name_zip)
    
    
